const mobile=window.innerWidth<=768;function getSharedElements(container=document.body){const splash=$("#splash",container),content=$(".content",container),reload=$("#reload",container),nav=$("#nav",container);return{splash:splash,content:content,reload:reload,nav:nav,ham:$("#ham",nav),toc:$("#toc",container),modalbg:$(".modalbg",container),socialmedia:$("#socialmedia",container),filechooser:$("#filechooser",container)}}function getContainerActions(DOM){initializeNav(DOM),initializeReload(DOM),initializeTOC(DOM,toggleTOC);function toggleTOC(open){const cl=DOM.toc.classList;void 0===open&&(open=cl.contains("detached")),requestAnimationFrame(()=>{open&&cl.contains("detached")?(cl.remove("detached"),setModal(!0)):open||cl.contains("detached")||(cl.add("detached"),setModal(!1))})}DOM.modalbg.subscribe("touchmove",ev=>ev.preventDefault());function setModal(on=!1){requestAnimationFrame(()=>{on?(DOM.modalbg.classList.remove("detached"),document.body.classList.add("modalopen")):(DOM.modalbg.classList.add("detached"),document.body.classList.remove("modalopen"))})}return{addTOC:function(target){const a=document.createElement("a"),h2=$("h2",target);Object.assign(a,{textContent:h2.textContent,href:"/#"+h2.id,className:"navitem"}),a.subscribe("click",ev=>toggleTOC(!1)),DOM.toc.appendChild(a)},setModal:setModal,addcard:function(card){DOM.content.appendChild(card)},redirectTOC:function(oldid,target){const h2=$("h2",target),a=$('a[href="#'+oldid+'"]',DOM.toc);a.href="#"+h2.id,a.textContent=h2.textContent,console.log("changing",oldid,"to",h2.id)}}}function initializeTOC(DOM,toggleTOC){DOM.modalbg.subscribe("click",()=>toggleTOC(!1)),DOM.ham.subscribe("click",toggleTOC)}function initializeNav(DOM){const{nav:nav,splash:splash}=DOM,navheight=nav.getBoundingClientRect().height;Rx.Observable.fromEvent(window,"scroll",{passive:!0}).startWith(0).map(()=>splash.getBoundingClientRect().bottom-navheight).observeOn(Rx.Scheduler.animationFrame).do(location=>{location<0!==nav.classList.contains("ontop")&&nav.classList.toggle("ontop")}).subscribe();nav.subscribe("touchmove",ev=>ev.preventDefault())}function initializeReload(DOM){const{reload:reload,splash:splash}=DOM,scrollthreshold=Math.floor(reload.getBoundingClientRect().bottom),ObsSplashTouchStart=Rx.Observable.fromEvent(splash,"touchstart",{passive:!0}),ObsSplashTouchMove=Rx.Observable.fromEvent(splash,"touchmove",{passive:!0}),ObsSplashTouchEnd=Rx.Observable.fromEvent(splash,"touchend",{passive:!0}),rlclassList=(ObsSplashTouchStart.do(()=>{const touchstart=ObsReloadWaiting.subscribe(),touchend=ObsReloadConfirm.subscribe(()=>{touchend.unsubscribe(),touchstart.unsubscribe()})}).subscribe(),reload.classList),ObsReloadWaiting=ObsSplashTouchMove.observeOn(Rx.Scheduler.animationFrame).do(()=>{scrollY<0?(rlclassList.remove("detached"),scrollY<-scrollthreshold?rlclassList.add("activated"):rlclassList.remove("activated")):rlclassList.add("detached")}),ObsReloadConfirm=ObsSplashTouchEnd.observeOn(Rx.Scheduler.animationFrame).do(()=>{scrollY>=-scrollthreshold?rlclassList.add("detached"):(rlclassList.add("active"),requestAnimationFrame(()=>window.location.reload()))})}async function main(){applypreloadedstyles();const loadcards=loadscript("cards.js","");await loadcards,requestAnimationFrame(()=>{DOM.reload.classList.remove("active"),DOM.reload.classList.add("detached")})}const DOM=getSharedElements(document.body),globalHandler=getContainerActions(DOM);main();