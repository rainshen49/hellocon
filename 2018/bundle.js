function $(selector,container=document){return container.querySelector(selector)}function $$(selector,container=document){return Array.from(container.querySelectorAll(selector))}function parseHtml(info){const dummyroot=document.createElement("div");return dummyroot.innerHTML=info,dummyroot}function parseSingleRoot(html){return parseHtml(html).firstElementChild}function safeLink(href,innerHTML){return parseSingleRoot(href?`<a rel="noopener noreferrer" target="_blank" href="${href}">${innerHTML}</a>`:`<a">${innerHTML}</a>`)}class Promises extends Promise{constructor(promises){Array.isArray(promises)?(super((yes,no)=>{Promise.all(promises).then(yes).catch(no)}),this.promises=promises):super(promises)}map(ftn){return new Promises(this.promises.map(promise=>promise.then(ftn)))}forEach(ftn){return new Promises(this.promises.map(promise=>promise.then(res=>(ftn(res),res))))}}function removeAllChildren(parent){let children;for(;children=parent.lastChild;)parent.removeChild(children)}function fetchJSON(url){return fetch(url).then(res=>res.json())}function waitDOMLoad(){return new Promise(yes=>{"loading"!==document.readyState?(console.log("already loaded"),yes()):(console.log("waiting for loading"),document.addEventListener("DOMContentLoaded",yes))})}function detectOverflowX(root){const old=root.scrollTop;return root.scrollTop=10,old!==root.scrollTop&&(root.scrollTop=0,!0)}function detectOverflowY(root){const old=root.scrollLeft;return root.scrollLeft=10,old!==root.scrollLeft&&(root.scrollLeft=0,!0)}function isInViewport(elem){const bounding=elem.getBoundingClientRect();return bounding.x>=0&&bounding.y>=0}Object.assign(EventTarget.prototype,{subscribe(event,ftn){const self=this;return this.addEventListener(event,ftn),{unsubscribe(){self.removeEventListener(event,ftn)}}}});const mobile=window.innerWidth<=767;function getSharedElements(container=document.body){const splash=$("#splash",container),content=$(".content",container),reload=$("#reload",container),nav=$("#nav",container),ham=$("#ham",nav),toc=$("#toc",container),modalbg=$(".modalbg",container),socialmedia=$("#socialmedia",container),[speakerDiv,infoDiv]=[$(".speakers"),$(".infocards")];return{splash:splash,content:content,reload:reload,nav:nav,ham:ham,toc:toc,modalbg:modalbg,socialmedia:socialmedia,speakerDiv:speakerDiv,infoDiv:infoDiv,head:$("#header",nav)}}function getContainerActions(DOM){function toggleTOC(open){const cl=DOM.toc.classList;void 0===open&&(open=cl.contains("detached")),requestAnimationFrame(()=>{open&&cl.contains("detached")?(cl.remove("detached"),setModal(!0)):open||cl.contains("detached")||(cl.add("detached"),setModal(!1))})}function setModal(on=!1){requestAnimationFrame(()=>{on?(DOM.modalbg.classList.remove("detached"),document.body.classList.add("modalopen")):(DOM.modalbg.classList.add("detached"),document.body.classList.remove("modalopen"))})}return initializeNav(DOM),initializeReload(DOM),initializeTOC(DOM,toggleTOC),DOM.modalbg.subscribe("touchmove",ev=>ev.preventDefault()),{addTOC:function(text,id){const a=document.createElement("a");Object.assign(a,{textContent:text,href:"/#"+id,className:"navitem"}),a.subscribe("click",()=>{toggleTOC(!1)}),DOM.toc.appendChild(a)},setModal:setModal,addSection:function(heading){const div=document.createElement("div");Object.assign(div,{textContent:heading,className:"navsection"}),DOM.toc.appendChild(div)}}}function initializeTOC(DOM,toggleTOC){DOM.modalbg.subscribe("click",()=>toggleTOC(!1)),DOM.ham.subscribe("click",toggleTOC)}function initializeNav(DOM){const{nav:nav,splash:splash,head:head,speakerDiv:speakerDiv,infoDiv:infoDiv}=DOM,navheight=nav.getBoundingClientRect().height;Rx.Observable.fromEvent(window,"scroll",{passive:!0}).startWith(0).map(()=>splash.getBoundingClientRect().bottom-navheight).observeOn(Rx.Scheduler.animationFrame).do(location=>{location<0!==nav.classList.contains("ontop")&&nav.classList.toggle("ontop")}).do(()=>{if(mobile){const speakerhidden=!isInViewport(speakerDiv),infohidden=!isInViewport(infoDiv);head.textContent=infohidden?"HelloCon":speakerhidden?"Speakers":"HelloCon"}}).subscribe()}function initializeReload(DOM){const{reload:reload,splash:splash}=DOM,scrollthreshold=Math.floor(reload.getBoundingClientRect().bottom),ObsSplashTouchStart=Rx.Observable.fromEvent(splash,"touchstart",{passive:!0}),ObsSplashTouchMove=Rx.Observable.fromEvent(splash,"touchmove",{passive:!0}),ObsSplashTouchEnd=Rx.Observable.fromEvent(splash,"touchend",{passive:!0}),rlclassList=(ObsSplashTouchStart.do(()=>{const touchstart=ObsReloadWaiting.subscribe(),touchend=ObsReloadConfirm.subscribe(()=>{touchend.unsubscribe(),touchstart.unsubscribe()})}).subscribe(),reload.classList),ObsReloadWaiting=ObsSplashTouchMove.observeOn(Rx.Scheduler.animationFrame).do(()=>{scrollY<0?(rlclassList.remove("detached"),scrollY<-scrollthreshold?rlclassList.add("activated"):rlclassList.remove("activated")):rlclassList.add("detached")}),ObsReloadConfirm=ObsSplashTouchEnd.observeOn(Rx.Scheduler.animationFrame).do(()=>{scrollY>=-scrollthreshold?rlclassList.add("detached"):(rlclassList.add("active"),requestAnimationFrame(()=>window.location.reload()))})}async function main(){waitDOMLoad().then(function(){requestAnimationFrame(()=>{DOM.reload.classList.remove("active"),DOM.reload.classList.add("detached")})})}const DOM=getSharedElements(document.body),globalHandler=getContainerActions(DOM);main();var config={apiKey:"AIzaSyC0qeYriiR2j1yR4zBofrqtEK0OjotP3dg",authDomain:"hellocon-map-1496105308208.firebaseapp.com",databaseURL:"https://hellocon-map-1496105308208.firebaseio.com",projectId:"hellocon-map-1496105308208",storageBucket:"hellocon-map-1496105308208.appspot.com",messagingSenderId:"468713207669"};firebase.initializeApp(config);const db=firebase.database();function writeDb(path,json){db.ref(path).set(json)}function listenDb(path,callback){db.ref(path).on("value",snap=>{callback(snap.val())})}function readDb(path){return new Promise((yes,no)=>{db.ref(path).once("value",snap=>{yes(snap.val())}),setTimeout(()=>no("Database Timeout"),2e3)})}const infocards=["register.html","come.html","whenwhere.html","coc.html","hellocon.html"],{speakerDiv:speakerDiv,infoDiv:infoDiv}=DOM,cardloaded=async function(){globalHandler.addSection("Speakers"),await renderSpeakerCards(),globalHandler.addSection("Conference"),await renderInfoCards(infocards)}();function toArrayByKey(json,keys){return keys.map(key=>json[key]||null).filter(a=>a)}function scrollHash(card){const dummy=$(".dummy",card);dummy.id===location.hash.slice(1)&&waitDOMLoad().then(()=>{console.log("comparing hash"),requestAnimationFrame(()=>dummy.scrollIntoView())})}function readMore({card:card,id:id,heading:heading}){const content=$(".card-content",card);return mobile&&(card.style.maxHeight=.7*window.innerHeight+"px"),waitDOMLoad().then(()=>{detectOverflowX(content)&&card.appendChild(readMoreElement(card,id))}),{card:card,id:id,heading:heading}}function readMoreElement(card,id){const action=parseSingleRoot(`<a href="/#${id}" class="readmore phoneonly">More...</a>`);return action.addEventListener("click",()=>{"More..."===action.textContent?(card.style.maxHeight="",action.textContent="Less",action.style.position="static"):(card.style.maxHeight=.7*window.innerHeight+"px",action.textContent="More...",action.style.position="absolute")}),action}async function renderSpeakerCards(){window.speakerData={};const toSpeakersjson=fetchJSON("./speakers/speakers.json"),toSpeakerlist=readDb("speakerlist"),[Speakerjson,SpeakerList]=await Promise.all([toSpeakersjson,toSpeakerlist]);return toArrayByKey(Speakerjson,SpeakerList).map(function({name:name,title:title,link:link,linkicon:linkicon,bio:bio,profilepic:profilepic,abstract:abstract}){return{name:parseSingleRoot(name),title:parseSingleRoot(title),linkEl:safeLink(link,linkicon),link:link,bio:parseSingleRoot(`<p>${bio}</p>`),profilepic:safeLink(link,profilepic),abstract:parseSingleRoot(`<p>${abstract}</p>`)}}).map(function({name:name,title:title,linkEl:linkEl,link:link,bio:bio,profilepic:profilepic,abstract:abstract}){const id=name.id;name.id="",window.speakerData[name.textContent]=title.textContent;const card=parseSingleRoot(`<div class="card">\n    <div class="dummy" id="${id}"></div>\n    <div class="card-content"></div>\n    </div>`),cardContent=$(".card-content",card);return cardContent.appendChild(profilepic).className="pic",cardContent.appendChild(name).className="speaker-name",name.appendChild(linkEl),cardContent.appendChild(title).className="talk-title",cardContent.appendChild(abstract),cardContent.appendChild(parseSingleRoot('<h4 class="about-speaker">About the speaker</h4>')),cardContent.appendChild(bio),{card:card,id:id,heading:name.textContent}}).map(function(data){return speakerDiv.appendChild(data.card),globalHandler.addTOC(data.heading,data.id),data}).map(cardObj=>(scrollHash(cardObj.card),cardObj)).map(readMore)}async function renderInfoCards(infocards){return toArrayByKey(await fetchJSON("./cards/cards.json"),infocards).map(function(cardhtml){const root=parseHtml(cardhtml),action=$(".card-action-wrapper",root),[title,pic,...content]=root.children;return{title:title,pic:pic,content:content,action:action}}).map(function({title:title,pic:pic,content:content,action:action}){const id=title.id;title.id="";const card=parseSingleRoot(`<div class="card">\n    <div class="dummy" id="${id}"></div>\n    <div class="card-content"></div>\n    </div>`),cardContent=$(".card-content",card);return cardContent.appendChild(title).className="card-title",cardContent.appendChild(pic).classList="pic",content.forEach(x=>cardContent.appendChild(x)),action&&card.appendChild(action),{card:card,id:id,heading:title.textContent}}).map(function({card:card,id:id,heading:heading}){return infoDiv.appendChild(card),globalHandler.addTOC(heading,id),{card:card,id:id,heading:heading}}).map(cardObj=>(scrollHash(cardObj.card),cardObj)).map(readMore)}function carousel(sponsors){const first=sponsors.firstElementChild;requestAnimationFrame(()=>(function scroll(lastx,dir){isInViewport(sponsors)?sponsors.scrollLeft+=dir:console.log("not in viewport"),lastx===sponsors.scrollLeft?setTimeout(()=>requestAnimationFrame(()=>scroll(lastx,-dir)),2e3):requestAnimationFrame(()=>requestAnimationFrame(()=>scroll(sponsors.scrollLeft,dir)))})(first.getBoundingClientRect(),2))}function initialize(whitecircle){removeAllChildren(whitecircle),whitecircle.appendChild(parseSingleRoot("<h3>Current:</h3>"));const now=parseSingleRoot('<div class="now"></div>');whitecircle.appendChild(now),whitecircle.appendChild(parseSingleRoot("<h3>Up Next:</h3>"));const next=parseSingleRoot('<div class="next"></div>');return whitecircle.appendChild(next),requestAnimationFrame(()=>whitecircle.classList.add("notcircle")),{now:now,next:next}}function updateRealtime({now:now,next:next},currentData,nextData){let nowInnerHTML=[],nextInnerHTML=[];switch(currentData.type){case"talk":{const{data:{speaker:speaker,link:link},starttime:starttime}=currentData,title=window.speakerData[speaker];title&&nowInnerHTML.push(`<h2>${title}</h2>`),nowInnerHTML.push(`<p>-- By ${speaker}</p>`),link&&nowInnerHTML.push(safeLink(link,"More Details").outerHTML);break}case"break":{const{data:{title:title}}=currentData;nowInnerHTML.push(`<h2>${title}</h2>`);break}}switch(nextData.type){case"talk":{const{data:{speaker:speaker,link:link},starttime:starttime}=nextData,title=window.speakerData[speaker];title&&nextInnerHTML.push(`<h2>At ${starttime}: ${title}</h2>`),nextInnerHTML.push(`<p>-- By ${speaker}</p>`);break}case"break":{const{data:{title:title},starttime:starttime}=nextData;nextInnerHTML.push(`<p><span>${starttime}</span>: ${title}</p>`);break}}now.innerHTML=nowInnerHTML.join(""),next.innerHTML=nextInnerHTML.join("")}function laterThanNow(a){const btime=(new Date).toString().split(" ")[4].split(":").slice(0,2).map(parseInt),atime=a.split(":").slice(0,2).map(parseInt);return a.toLowerCase().includes("p")&&(atime[0]+=12),atime[0]===btime[0]?atime[1]>btime[1]:atime[0]>btime[0]}!async function(){const sponsors=$(".sponsors"),imgs=$$("img",sponsors);await cardloaded,await new Promises(imgs.map(img=>(img.src=img.dataset.src,new Promise((yes,no)=>{img.onload=yes,img.onerror=(()=>{yes(),console.error(img.src,"error")})})))),detectOverflowY(sponsors)&&carousel(sponsors)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,